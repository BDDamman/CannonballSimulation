<Window x:Class="Cannon_Simulation.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:Cannon_Simulation"
        mc:Ignorable="d" Title="Cannonball Simulation"
        Background="#FF79BFDC"
        WindowStartupLocation="CenterScreen"
        MinWidth="875" MinHeight="780"
        WindowState="Maximized" Icon="RemovableIcon.png">

    <!--Style, Converter, and DataTemplate for MainWindow-->
    <Window.Resources>
        <local:IndexToSolidColorBrush x:Key="indexToBrush"/>
        <Style x:Key="btnStyle" TargetType="{x:Type Button}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="brd"
										Background="{StaticResource TabBackgroundNormal}">
                            <ContentPresenter Margin="10,0" 
                                              x:Name="cp"
                                              TextBlock.Foreground="{StaticResource TabForegroundNormal}"
                                              TextBlock.FontFamily="Segoe UI Semibold"
                                              TextBlock.FontSize="40" 
                                              HorizontalAlignment="Center"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver"
										 Value="True">
                                <Setter TargetName="brd"
												Property="Panel.Background"
												Value="{StaticResource TabBackgroundHover}"/>
                                <Setter TargetName="cp"
												Property="TextBlock.Foreground"
												Value="Black"/>
                            </Trigger>
                            <Trigger Property="IsPressed"
											 Value="True">
                                <Setter TargetName="brd"
												Property="Panel.Background"
												Value="{StaticResource TabBackgroundPressed}"/>
                                <Setter TargetName="cp"
												Property="TextBlock.Foreground"
												Value="Black"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <DataTemplate x:Key="ItemDataTemplate">
            <Grid TextBlock.FontSize="14"
                  TextBlock.FontFamily="Segoe UI Semibold"
                  Background="Transparent" Margin="4,8,4,4">

                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto" SharedSizeGroup="TrajectoryColor"/>
                    <RowDefinition Height="Auto" SharedSizeGroup="DistanceTraveled"/>
                    <RowDefinition Height="Auto" SharedSizeGroup="HighestAltitudeAchieved"/>
                    <RowDefinition Height="Auto" SharedSizeGroup="VelocityOfImpact"/>
                    <RowDefinition Height="Auto" SharedSizeGroup="MuzzleVelocity"/>
                </Grid.RowDefinitions>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="Auto"/>
                </Grid.ColumnDefinitions>

                <Border MinHeight="25"
                        Background="{Binding Path=IndexNumber,
                    Converter={StaticResource indexToBrush}}">
                    <TextBlock Text="{Binding Path=CannonballType}"
										 Margin="3" HorizontalAlignment="Center"
										 Foreground="Black"/>
                </Border>

                <TextBlock Grid.Row="1" Grid.Column="0" Margin="3"
                           Text="Distance Traveled:"/>
                <TextBlock Grid.Row="2" Grid.Column="0" Margin="3"
                           Text="Highest Altitude:"/>
                <TextBlock Grid.Row="3" Grid.Column="0" Margin="3"
                           Text="Velocity at Impact:"/>
                <TextBlock Grid.Row="4" Grid.Column="0" Margin="3"
                           Text="Muzzle Velocity:"/>

                <TextBlock Grid.Row="1" Grid.Column="1" Margin="3" 
                               Text="{Binding Path=DistanceTraveled}"/>
                <TextBlock Grid.Row="2" Grid.Column="1" Margin="3" 
                               Text="{Binding Path=HighestAltitudeAchieved}"/>
                <TextBlock Grid.Row="3" Grid.Column="1" Margin="3" 
                               Text="{Binding Path=VelocityOfImpact}"/>
                <TextBlock Grid.Row="4" Grid.Column="1" Margin="3" 
                               Text="{Binding Path=MuzzleVelocity}"/>
            </Grid>
        </DataTemplate>
    </Window.Resources>

    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="*"/>
            <RowDefinition Height="200"/>
        </Grid.RowDefinitions>

        <!--Height="160" Width="160"-->
        <Viewbox Grid.Row="0" 
                 HorizontalAlignment="Left"
                 Stretch="Uniform" VerticalAlignment="Bottom">
            <Canvas Width="12" Height="12" Name="BombRange"
                    VerticalAlignment="Bottom">
                <Canvas>
                    <Path Stroke="Black" StrokeThickness="0.5"
                      RenderTransformOrigin="0.52,0.25"
                      Canvas.Top="{Binding Path=CanvasTopModifier, 
                                    FallbackValue=0}"
                      Width="12" Height="12" Name="Cannon"
                      Data="M2.5,4 C1.5,4 1.5,1 2.5,1 l9,0.5 l0,2z M0.5,2.5 A0.5,0.5 0 1 0 0.5,2.499">
                        <Path.RenderTransform>
                            <RotateTransform Angle="{Binding Path=DisplayableCannonAngle}"/>
                        </Path.RenderTransform>
                        <Path.Fill>
                            <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.51,0">
                                <GradientStop Color="DarkGray" Offset="0"/>
                                <GradientStop Color="DarkGray" Offset="0.2"/>
                                <GradientStop Color="White" Offset="0.3"/>
                                <GradientStop Color="DarkGray" Offset="0.45"/>
                                <GradientStop Color="Black" Offset="1"/>
                            </LinearGradientBrush>
                        </Path.Fill>
                    </Path>
                    <Path Stroke="Black" StrokeThickness="0.5"
                      Fill="DarkGray"
                      Canvas.Top="{Binding Path=CanvasTopModifier, 
                                    FallbackValue=0}"
                      Width="12" Height="12"
                      Data="M3.5,9.5 l2,-7.5 l1.5,0 l2,7.5z M5.75,3 A0.5,0.5 0 1 0 5.75,2.999"/>
                </Canvas>
            </Canvas>

        </Viewbox>

        <Grid Grid.Row="1"
              MinHeight="150" Name="ControlPanel">
            <Grid.Background>
                <LinearGradientBrush EndPoint="1440,75" StartPoint="0,150" 
                                     FrameworkElement.FlowDirection="RightToLeft" 
                                     MappingMode="Absolute">
                    <GradientStop Color="#FF494949" Offset="1"/>
                    <GradientStop Color="#FF8F8F8F"/>
                </LinearGradientBrush>
            </Grid.Background>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="*"/>
            </Grid.ColumnDefinitions>

            <StackPanel Background="Transparent"
                        Orientation="Horizontal"
                        Grid.Column="0">
                <StackPanel Name="CurrentSettings"
                            Background="Transparent" Margin="20,10"
                            Orientation="Horizontal">
                    <Grid Name="CurrentInformation">
                        <Grid.RowDefinitions>
                            <RowDefinition/>
                            <RowDefinition/>
                            <RowDefinition/>
                            <RowDefinition/>
                            <RowDefinition/>
                        </Grid.RowDefinitions>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition/>
                            <ColumnDefinition/>
                            <ColumnDefinition/>
                        </Grid.ColumnDefinitions>

                        <TextBlock Text="Cannonball Density:"   Margin="5"
                                   Grid.Row="0" Grid.Column="0"/>
                        <ComboBox ItemsSource="{Binding Path=CannonBallDensities}" Margin="5"
                                  SelectionChanged="SelectedDensity"
                                  SelectedItem="{Binding Path=CannonballTextDensity}"
                                  Grid.Row="0" Grid.Column="1" MinWidth="130"/>
                        <StackPanel Margin="0" Orientation="Horizontal" 
                                    Grid.Row="0" Grid.Column="2">
                            <TextBlock Text="kg/m" Margin="5"/>
                            <TextBlock Text="3" Margin="-5,0,0,0"/>
                        </StackPanel>

                        <TextBlock Text="Cannon Barrel Length:" Margin="5"
                                   Grid.Row="1" Grid.Column="0"/>
                        <Slider Maximum="2" Minimum="0.5" LargeChange="0.1"
                                Grid.Row="1" Grid.Column="1" TickFrequency="0.1" 
                                TickPlacement="BottomRight" Margin="5"
                                Value="{Binding Path=CannonBarrelLength}"/>
                        <StackPanel Grid.Row="1" Grid.Column="2"
                                    Orientation="Horizontal">
                            <TextBlock Text="{Binding Path=ConvertedCannonBarrelLength,
                                                FallbackValue=0.78}"
                                       Grid.Row="1" Grid.Column="2" Margin="5"/>
                            <TextBlock Text="meters" Margin="-3,5,5,5"
                                       Grid.Row="1" Grid.Column="2"/>
                        </StackPanel>

                        <TextBlock Text="Cannon Angle:" Margin="5"
                                   Grid.Row="2" Grid.Column="0"/>
                        <Slider Margin="5" Grid.Row="2" Grid.Column="1"
                                Value="{Binding Path=CannonAngle}"
                                TickPlacement="BottomRight" 
                                TickFrequency="5" Maximum="89"
                                Minimum="9"
                                SmallChange="1" LargeChange="5"/>
                        <StackPanel Grid.Row="2" Grid.Column="2"
                                    Orientation="Horizontal">
                            <TextBlock Text="{Binding Path=ConvertedCannonAngle, 
                                                FallbackValue=17}"
                                       Margin="5"/>
                            <TextBlock Text="degrees" Margin="-3,5,5,5"
                                       Grid.Row="2" Grid.Column="2"/>
                        </StackPanel>

                        <TextBlock Text="Powder:" Margin="5"
                                   Grid.Row="3" Grid.Column="0"/>
                        <TextBlock Text="Pyrodex" Grid.Row="3"
                                   Grid.Column="1" Margin="5"/>
                        <TextBlock Text="~361 N/g" Margin="5"
                                   Grid.Row="3" Grid.Column="2"/>

                        <TextBlock Text="Powder Amount:" Margin="5"
                                   Grid.Row="4" Grid.Column="0"/>
                        <Slider Margin="5" Grid.Row="4" Grid.Column="1"
                                TickPlacement="BottomRight" SmallChange="5" LargeChange="10" 
                                TickFrequency="25" Maximum="1000" 
                                Minimum="{Binding Path=MinimumPowder}"
                                Value="{Binding Path=PowderAmount}"/>
                        <StackPanel Grid.Row="4" Grid.Column="2"
                                    Orientation="Horizontal">
                            <TextBlock Text="{Binding Path=ConvertedPowderAmount,
                                                FallbackValue=106}"
                                       Margin="5"/>
                            <TextBlock Text="grams" Margin="-3,5,5,5"
                                       Grid.Row="4" Grid.Column="2"/>
                        </StackPanel>
                    </Grid>
                </StackPanel>
                <StackPanel HorizontalAlignment="Right"
                        VerticalAlignment="Bottom" Margin="20,10">
                    <Button Content="FIRE!" Grid.Column="1"
                        Style="{StaticResource btnStyle}"
                        Margin="10" MinWidth="175"
                        Click="FireCannonWithInput"/>
                    <Button Content="Clear Old Data" Grid.Column="1"
                        Style="{StaticResource btnStyle}"
                        Margin="10" MinWidth="175"
                        Click="ClearOldData"/>
                </StackPanel>
            </StackPanel>

            <ItemsControl Name="lbxTrajectoryData" 
                     Grid.Column="1" Margin="20,10"
                     Visibility="{Binding Path=IsThereOldData}"
                     ItemTemplate="{StaticResource ItemDataTemplate}"
                     ItemsSource="{Binding Path=BallisticTrajectories}">
                <ItemsControl.ItemsPanel>
                    <ItemsPanelTemplate>
                        <StackPanel Orientation="Horizontal"
                                    Background="Transparent"/>
                    </ItemsPanelTemplate>
                </ItemsControl.ItemsPanel>
                <ItemsControl.Template>
                    <ControlTemplate>
                        <Border Background="Transparent">
                            <ScrollViewer Padding="{TemplateBinding Padding}"
                                          VerticalScrollBarVisibility="Disabled"
                                          HorizontalScrollBarVisibility="Auto">
                                <ItemsPresenter IsHitTestVisible="False"/>
                            </ScrollViewer>
                        </Border>
                    </ControlTemplate>
                </ItemsControl.Template>
            </ItemsControl>

        </Grid>
    </Grid>
</Window>